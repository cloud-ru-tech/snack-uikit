{"meta":{"application":"Dependency-Track","version":"4.11.0","timestamp":"2024-09-17T11:17:15Z"},"findings":[{"component":{"latestVersion":"7.4.3","name":"tar","cpe":"cpe:2.3:a:tar_project:tar:6.1.11:*:*:*:*:node.js:*:*","project":"090b01c0-00ec-4e9f-8734-3e5d82cb0aa3","purl":"pkg:npm/tar@6.1.11","uuid":"09ca600b-48c1-4be3-b3db-ba66b71105dd","version":"6.1.11"},"attribution":{"analyzerIdentity":"OSSINDEX_ANALYZER","attributedOn":"2024-09-17 10:45:45.972"},"vulnerability":{"severity":"UNASSIGNED","severityRank":5,"vulnId":"CVE-2024-28863","aliases":[],"epssPercentile":0.16325,"description":"node-tar is a Tar for Node.js. node-tar prior to version 6.2.1 has no limit on the number of sub-folders created in the folder creation process. An attacker who generates a large number of sub-folders can consume memory on the system running node-tar and even crash the Node.js client within few seconds of running it using a path with too many sub-folders inside. Version 6.2.1 fixes this issue by preventing extraction in excessively deep sub-folders.","epssScore":0.00045,"source":"NVD","uuid":"c325335e-50c3-4cec-af6c-244caffda58c"},"analysis":{"isSuppressed":false},"matrix":"090b01c0-00ec-4e9f-8734-3e5d82cb0aa3:09ca600b-48c1-4be3-b3db-ba66b71105dd:c325335e-50c3-4cec-af6c-244caffda58c"},{"component":{"latestVersion":"2.0.1","name":"ip","cpe":"cpe:2.3:a:fedorindutny:ip:1.1.9:*:*:*:*:node.js:*:*","project":"090b01c0-00ec-4e9f-8734-3e5d82cb0aa3","purl":"pkg:npm/ip@1.1.9","uuid":"3a0d729b-1f6a-4ca1-91bd-e52f07842e9d","version":"1.1.9"},"attribution":{"analyzerIdentity":"OSSINDEX_ANALYZER","attributedOn":"2024-09-17 10:43:50.259"},"vulnerability":{"severity":"UNASSIGNED","severityRank":5,"vulnId":"CVE-2024-29415","aliases":[],"description":"The ip package through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via isPublic. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282.","source":"NVD","uuid":"fc8969f6-002a-4db3-8c3e-9c3324743cb6"},"analysis":{"isSuppressed":false},"matrix":"090b01c0-00ec-4e9f-8734-3e5d82cb0aa3:3a0d729b-1f6a-4ca1-91bd-e52f07842e9d:fc8969f6-002a-4db3-8c3e-9c3324743cb6"},{"component":{"latestVersion":"2.0.1","name":"ip","cpe":"cpe:2.3:a:fedorindutny:ip:2.0.1:*:*:*:*:node.js:*:*","project":"090b01c0-00ec-4e9f-8734-3e5d82cb0aa3","purl":"pkg:npm/ip@2.0.1","uuid":"5e420625-0cb7-47ed-bb47-1a8b47e611ff","version":"2.0.1"},"attribution":{"analyzerIdentity":"OSSINDEX_ANALYZER","attributedOn":"2024-09-17 10:43:57.182"},"vulnerability":{"severity":"UNASSIGNED","severityRank":5,"vulnId":"CVE-2024-29415","aliases":[],"description":"The ip package through 2.0.1 for Node.js might allow SSRF because some IP addresses (such as 127.1, 01200034567, 012.1.2.3, 000:0:0000::01, and ::fFFf:127.0.0.1) are improperly categorized as globally routable via isPublic. NOTE: this issue exists because of an incomplete fix for CVE-2023-42282.","source":"NVD","uuid":"fc8969f6-002a-4db3-8c3e-9c3324743cb6"},"analysis":{"isSuppressed":false},"matrix":"090b01c0-00ec-4e9f-8734-3e5d82cb0aa3:5e420625-0cb7-47ed-bb47-1a8b47e611ff:fc8969f6-002a-4db3-8c3e-9c3324743cb6"},{"component":{"latestVersion":"5.94.0","name":"webpack","cpe":"cpe:2.3:a:webpack.js:webpack:5.86.0:*:*:*:*:node.js:*:*","project":"090b01c0-00ec-4e9f-8734-3e5d82cb0aa3","purl":"pkg:npm/webpack@5.86.0","uuid":"607d8dbc-77a6-4bb4-a5a5-022f8b7c82fc","version":"5.86.0"},"attribution":{"analyzerIdentity":"INTERNAL_ANALYZER","attributedOn":"2024-09-17 10:43:06.341"},"vulnerability":{"severity":"MEDIUM","cvssV3BaseScore":6.1,"vulnId":"CVE-2024-43788","aliases":[],"cweId":79,"description":"Webpack is a module bundler. Its main purpose is to bundle JavaScript files for usage in a browser, yet it is also capable of transforming, bundling, or packaging just about any resource or asset. The webpack developers have discovered a DOM Clobbering vulnerability in Webpack\u2019s `AutoPublicPathRuntimeModule`. The DOM Clobbering gadget in the module can lead to cross-site scripting (XSS) in web pages where scriptless attacker-controlled HTML elements (e.g., an `img` tag with an unsanitized `name` attribute) are present. Real-world exploitation of this gadget has been observed in the Canvas LMS which allows a XSS attack to happen through a javascript code compiled by Webpack (the vulnerable part is from Webpack). DOM Clobbering is a type of code-reuse attack where the attacker first embeds a piece of non-script, seemingly benign HTML markups in the webpage (e.g. through a post or comment) and leverages the gadgets (pieces of js code) living in the existing javascript code to transform it into executable code. This vulnerability can lead to cross-site scripting (XSS) on websites that include Webpack-generated files and allow users to inject certain scriptless HTML tags with improperly sanitized name or id attributes. This issue has been addressed in release version 5.94.0. All users are advised to upgrade. There are no known workarounds for this issue.","epssScore":0.00059,"source":"NVD","cwes":[{"cweId":79,"name":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')"}],"uuid":"e417bc0f-1682-455c-b543-a314270f4fec","severityRank":2,"cweName":"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')","epssPercentile":0.2607},"analysis":{"isSuppressed":false},"matrix":"090b01c0-00ec-4e9f-8734-3e5d82cb0aa3:607d8dbc-77a6-4bb4-a5a5-022f8b7c82fc:e417bc0f-1682-455c-b543-a314270f4fec"},{"component":{"latestVersion":"1.7.7","name":"axios","cpe":"cpe:2.3:a:axios:axios:1.6.0:*:*:*:*:node.js:*:*","project":"090b01c0-00ec-4e9f-8734-3e5d82cb0aa3","purl":"pkg:npm/axios@1.6.0","uuid":"a36ace36-6010-41f3-9272-47ffb07c1c52","version":"1.6.0"},"attribution":{"analyzerIdentity":"INTERNAL_ANALYZER","attributedOn":"2024-09-17 10:42:29.576"},"vulnerability":{"severity":"HIGH","cvssV3BaseScore":7.5,"vulnId":"CVE-2024-39338","aliases":[],"cweId":918,"description":"axios 1.7.2 allows SSRF via unexpected behavior where requests for path relative URLs get processed as protocol relative URLs.","epssScore":0.00084,"source":"NVD","cwes":[{"cweId":918,"name":"Server-Side Request Forgery (SSRF)"}],"uuid":"53f61454-0cfa-47ec-8756-02692b07baa4","severityRank":1,"cweName":"Server-Side Request Forgery (SSRF)","epssPercentile":0.36589},"analysis":{"isSuppressed":false},"matrix":"090b01c0-00ec-4e9f-8734-3e5d82cb0aa3:a36ace36-6010-41f3-9272-47ffb07c1c52:53f61454-0cfa-47ec-8756-02692b07baa4"},{"component":{"latestVersion":"3.2.6","name":"async","cpe":"cpe:2.3:a:async:async:3.2.3:*:*:*:*:*:*:*","project":"090b01c0-00ec-4e9f-8734-3e5d82cb0aa3","purl":"pkg:npm/async@3.2.3","uuid":"c7395d3b-bfaa-4a47-a660-43463691c657","version":"3.2.3"},"attribution":{"analyzerIdentity":"OSSINDEX_ANALYZER","attributedOn":"2024-09-17 10:43:35.552"},"vulnerability":{"severity":"UNASSIGNED","severityRank":5,"vulnId":"CVE-2024-39249","aliases":[],"epssPercentile":0.16325,"description":"Async <= 2.6.4 and <= 3.2.5 are vulnerable to ReDoS (Regular Expression Denial of Service) while parsing function in autoinject function. NOTE: this is disputed by the supplier because there is no realistic threat model: regular expressions are not used with untrusted input.","epssScore":0.00045,"source":"NVD","uuid":"9e0f65fa-0ef7-4913-b8fe-0c084716d455"},"analysis":{"isSuppressed":false},"matrix":"090b01c0-00ec-4e9f-8734-3e5d82cb0aa3:c7395d3b-bfaa-4a47-a660-43463691c657:9e0f65fa-0ef7-4913-b8fe-0c084716d455"},{"component":{"latestVersion":"6.26.0","name":"babel-traverse","cpe":"cpe:2.3:a:babel-traverse:babel-traverse:6.26.0:*:*:*:*:*:*:*","project":"090b01c0-00ec-4e9f-8734-3e5d82cb0aa3","purl":"pkg:npm/babel-traverse@6.26.0","uuid":"d86e77c9-e343-4c5b-af8b-63051a141447","version":"6.26.0"},"attribution":{"analyzerIdentity":"OSSINDEX_ANALYZER","attributedOn":"2024-09-17 10:43:37.878"},"vulnerability":{"severity":"HIGH","cvssV3BaseScore":8.8,"vulnId":"CVE-2023-45133","aliases":[],"cweId":697,"description":"Babel is a compiler for writingJavaScript. In `@babel/traverse` prior to versions 7.23.2 and 8.0.0-alpha.4 and all versions of `babel-traverse`, using Babel to compile code that was specifically crafted by an attacker can lead to arbitrary code execution during compilation, when using plugins that rely on the `path.evaluate()`or `path.evaluateTruthy()` internal Babel methods. Known affected plugins are `@babel/plugin-transform-runtime`; `@babel/preset-env` when using its `useBuiltIns` option; and any \"polyfill provider\" plugin that depends on `@babel/helper-define-polyfill-provider`, such as `babel-plugin-polyfill-corejs3`, `babel-plugin-polyfill-corejs2`, `babel-plugin-polyfill-es-shims`, `babel-plugin-polyfill-regenerator`. No other plugins under the `@babel/` namespace are impacted, but third-party plugins might be. Users that only compile trusted code are not impacted. The vulnerability has been fixed in `@babel/traverse@7.23.2` and `@babel/traverse@8.0.0-alpha.4`. Those who cannot upgrade `@babel/traverse` and are using one of the affected packages mentioned above should upgrade them to their latest version to avoid triggering the vulnerable code path in affected `@babel/traverse` versions: `@babel/plugin-transform-runtime` v7.23.2, `@babel/preset-env` v7.23.2, `@babel/helper-define-polyfill-provider` v0.4.3, `babel-plugin-polyfill-corejs2` v0.4.6, `babel-plugin-polyfill-corejs3` v0.8.5, `babel-plugin-polyfill-es-shims` v0.10.0, `babel-plugin-polyfill-regenerator` v0.5.3.","epssScore":0.0006,"source":"NVD","cwes":[{"cweId":697,"name":"Incorrect Comparison"}],"uuid":"4647cf7f-1e38-4852-9c22-bc925c8f647e","severityRank":1,"cweName":"Incorrect Comparison","epssPercentile":0.26433},"analysis":{"isSuppressed":false},"matrix":"090b01c0-00ec-4e9f-8734-3e5d82cb0aa3:d86e77c9-e343-4c5b-af8b-63051a141447:4647cf7f-1e38-4852-9c22-bc925c8f647e"},{"component":{"latestVersion":"3.1.10","name":"ejs","cpe":"cpe:2.3:a:ejs:ejs:3.1.8:*:*:*:*:node.js:*:*","project":"090b01c0-00ec-4e9f-8734-3e5d82cb0aa3","purl":"pkg:npm/ejs@3.1.8","uuid":"cf5338cc-8143-4437-a5e0-ed9c29c6adfd","version":"3.1.8"},"attribution":{"analyzerIdentity":"OSSINDEX_ANALYZER","attributedOn":"2024-09-17 10:43:41.136"},"vulnerability":{"severity":"CRITICAL","cvssV3BaseScore":9.8,"vulnId":"CVE-2023-29827","aliases":[],"cweId":74,"description":"ejs v3.1.9 is vulnerable to server-side template injection. If the ejs file is controllable, template injection can be implemented through the configuration settings of the closeDelimiter parameter. NOTE: this is disputed by the vendor because the render function is not intended to be used with untrusted input.","epssScore":0.08969,"source":"NVD","cwes":[{"cweId":74,"name":"Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')"}],"uuid":"8cdad03d-2196-459f-a082-32c866806ea1","severityRank":0,"cweName":"Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')","epssPercentile":0.9472},"analysis":{"isSuppressed":false},"matrix":"090b01c0-00ec-4e9f-8734-3e5d82cb0aa3:cf5338cc-8143-4437-a5e0-ed9c29c6adfd:8cdad03d-2196-459f-a082-32c866806ea1"},{"component":{"latestVersion":"3.1.10","name":"ejs","cpe":"cpe:2.3:a:ejs:ejs:3.1.8:*:*:*:*:node.js:*:*","project":"090b01c0-00ec-4e9f-8734-3e5d82cb0aa3","purl":"pkg:npm/ejs@3.1.8","uuid":"cf5338cc-8143-4437-a5e0-ed9c29c6adfd","version":"3.1.8"},"attribution":{"analyzerIdentity":"OSSINDEX_ANALYZER","attributedOn":"2024-09-17 10:43:41.663"},"vulnerability":{"severity":"UNASSIGNED","severityRank":5,"vulnId":"CVE-2024-33883","aliases":[],"epssPercentile":0.48653,"description":"The ejs (aka Embedded JavaScript templates) package before 3.1.10 for Node.js lacks certain pollution protection.","epssScore":0.00129,"source":"NVD","uuid":"c86c8053-b7f7-40d1-9c84-22546c97cb65"},"analysis":{"isSuppressed":false},"matrix":"090b01c0-00ec-4e9f-8734-3e5d82cb0aa3:cf5338cc-8143-4437-a5e0-ed9c29c6adfd:c86c8053-b7f7-40d1-9c84-22546c97cb65"}],"project":{"name":"sbercloud-ui/tokens-design-system/snack-uikit","uuid":"090b01c0-00ec-4e9f-8734-3e5d82cb0aa3","version":"dda75ecd"},"version":"1.2"}