@use '@snack-uikit/figma-tokens/build/scss/components/styles-tokens-tabs';

$orientations: 'vertical', 'horizontal';
$types: 'primary', 'secondary';

.tabBar {
  @include styles-tokens-tabs.composite-var(styles-tokens-tabs.$tabs-container);

  position: relative;
  display: flex;
  box-sizing: border-box;

  &[data-orientation='vertical'] {
    flex-direction: column;
    align-items: flex-start;
  }

  &[data-orientation='horizontal'] {
    flex-direction: row;
    align-items: center;
  }
}

.tabBarAfter {
  &[data-orientation='vertical'] {
    &[data-type='primary'] {
      @include styles-tokens-tabs.composite-var(styles-tokens-tabs.$tabs-tab-button-primary-height);

      min-height: auto;
    }

    &[data-type='secondary'] {
      @include styles-tokens-tabs.composite-var(styles-tokens-tabs.$tabs-tab-button-secondary-vertical-height);

      min-height: auto;
    }
  }
}

.tabBarMain {
  position: relative;
  box-sizing: border-box;
  min-width: 0;
  min-height: 0;
}

@each $orientation in $orientations {
  .#{$orientation}ScrollContainer {
    @if $orientation == 'vertical' {
      overflow-x: visible;
      overflow-y: scroll;
      max-height: 100%;
    }

 @else {
      overflow-x: scroll;
      overflow-y: visible;
      max-width: 100%;
    }
  }
}

.tabsRow {
  position: relative;

  overflow: hidden;
  display: flex;

  width: fit-content;

  white-space: nowrap;

  &[data-type='primary'] {
    @include styles-tokens-tabs.composite-var(styles-tokens-tabs.$tabs-primary);
  }

  &[data-type='secondary'] {
    @include styles-tokens-tabs.composite-var(styles-tokens-tabs.$tabs-secondary);
  }

  &[data-orientation='vertical'] {
    flex-direction: column;
    height: 100%;

    &[data-type='secondary'] {
      gap: 0px;
    }
  }

  &[data-orientation='horizontal'] {
    flex-direction: row;
  }
}

.marker {
  position: absolute;
  background-color: styles-tokens-tabs.simple-var(
    styles-tokens-tabs.$theme-variables,
    'sys',
    'primary',
    'accent-default'
  );
  transition:
    left 0.1s ease,
    width 0.1s ease,
    top 0.1s ease,
    height 0.1s ease;

  @each $orientation in $orientations {
    &[data-orientation='#{$orientation}'] {
      @include styles-tokens-tabs.composite-var(styles-tokens-tabs.$tabs, 'marker-#{$orientation}');
    }
  }

  &[data-position='before'] {
    top: 0;
    left: 0;
  }

  &[data-position='after'] {
    right: 0;
    bottom: 0;
  }
}

.divider {
  position: absolute;
  width: 100%;

  &[data-position='before'] {
    top: 0;
    left: 0;
  }

  &[data-position='after'] {
    right: 0;
    bottom: 0;
  }
}
