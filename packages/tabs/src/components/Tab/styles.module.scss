@use '@snack-uikit/figma-tokens/build/scss/components/styles-tokens-tabs';
@use '@snack-uikit/figma-tokens/build/scss/components/styles-tokens-element';

@mixin increasedClickArea($gap) {
  &::after {
    content: ' ';

    position: absolute;
    top: 0;
    right: calc(#{$gap} / -2);
    bottom: 0;
    left: calc(#{$gap} / -2);
  }
}

$orientations: 'vertical', 'horizontal';
$types: 'primary', 'secondary';

.tab {
  cursor: pointer;

  position: relative;

  display: inline-flex;
  flex-direction: row;
  align-items: center;

  padding: 0;

  color: styles-tokens-tabs.simple-var(styles-tokens-tabs.$theme-variables, 'sys', 'neutral', 'text-support');

  background-color: transparent;
  border-width: 0;
  outline: none;

  @each $orientation in $orientations {
    @each $type in $types {
      &[data-orientation='#{$orientation}'] {
        &[data-type='#{$type}'] {
          @if $type == 'primary' {
            @include styles-tokens-tabs.composite-var(styles-tokens-tabs.$tabs, 'tab-button-#{$type}', 'height');
          }

 @else {
            @include styles-tokens-tabs.composite-var(
              styles-tokens-tabs.$tabs,
              'tab-button-#{$type}',
              $orientation,
              'height'
            );
          }

          @include increasedClickArea(
            styles-tokens-tabs.simple-var(styles-tokens-tabs.$theme-variables, 'space', 'tabs', $type, 'gap')
          );
          & .container {
            @include styles-tokens-tabs.composite-var(styles-tokens-tabs.$tabs, 'tab-button-#{$type}', 'container');
          }
        }
      }
    }
  }

  &[data-selected='true'],
  &:focus-visible,
  &:hover {
    color: styles-tokens-tabs.simple-var(styles-tokens-tabs.$theme-variables, 'sys', 'neutral', 'text-main');
  }

  &:disabled {
    cursor: not-allowed;
    color: styles-tokens-tabs.simple-var(styles-tokens-tabs.$theme-variables, 'sys', 'neutral', 'text-disabled');
  }

  & .container {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  &:focus-visible {
    & .container {
      @include styles-tokens-tabs.outline-var(styles-tokens-element.$container-focused-s);

      outline-color: styles-tokens-tabs.simple-var(
        styles-tokens-tabs.$theme-variables,
        'sys',
        'available',
        'complementary'
      );
    }
    &[data-selected='true'] .container {
      outline-color: styles-tokens-tabs.simple-var(
        styles-tokens-tabs.$theme-variables,
        'sys',
        'primary',
        'accent-default'
      );
    }
  }
}
