@import '@sbercloud/figma-tokens/build/scss/components/styles-tokens-button-buttonFilled';
@import '@sbercloud/figma-tokens/build/scss/components/styles-tokens-element';
@import '../../styles.module';

$types: primary, neutral, red; /* stylelint-disable-line color-named */
$sizes: s, m, l;
$variants: label-only, icon-only, icon-after;
$icon-size: var($icon-s);
$typography: (
  s: $sans-label-m,
  m: $sans-label-l,
  l: $sans-label-l
);

@mixin button-colors-styles {
  @each $type in $types {
    &[data-type='#{$type}'] {
      @include label-color(simple-var($theme-variables, 'sys', $type, 'on-accent'));
      @include icon-fill(simple-var($theme-variables, 'sys', $type, 'on-accent'));
      background-color: simple-var($theme-variables, 'sys', $type, 'accent-default');

      &:hover {
        @include label-color(simple-var($theme-variables, 'sys', $type, 'on-accent'));
        @include icon-fill(simple-var($theme-variables, 'sys', $type, 'on-accent'));
        background-color: simple-var($theme-variables, 'sys', $type, 'accent-hovered');
      }

      &:focus-visible {
        @include label-color(simple-var($theme-variables, 'sys', $type, 'on-accent'));
        @include icon-fill(simple-var($theme-variables, 'sys', $type, 'on-accent'));
        background-color: simple-var($theme-variables, 'sys', $type, 'accent-hovered');
      }

      &:active {
        @include label-color(simple-var($theme-variables, 'sys', $type, 'on-accent'));
        @include icon-fill(simple-var($theme-variables, 'sys', $type, 'on-accent'));
        background-color: simple-var($theme-variables, 'sys', $type, 'accent-pressed');
      }

      &:disabled,
      &[data-disabled] {
        @include label-color(simple-var($theme-variables, 'sys', 'neutral', 'text-light'));
        @include icon-fill(simple-var($theme-variables, 'sys', 'neutral', 'text-light'));
        background-color: simple-var($theme-variables, 'sys', 'neutral', 'decor-disabled');
      }

      &[data-loading] {
        @include label-color(simple-var($theme-variables, 'sys', $type, 'on-accent'));
        @include icon-fill(simple-var($theme-variables, 'sys', $type, 'on-accent'));
        background-color: simple-var($theme-variables, 'sys', $type, 'accent-pressed');
      }
    }
  }
}

@mixin button-outline-colors-styles {
  @each $type in $types {
    &[data-type='#{$type}'] {
      &:focus-visible {
        @if $type == 'neutral' {
          outline-color: var($sys-available-complementary);
        }

 @else {
          outline-color: simple-var($theme-variables, 'sys', $type, 'accent-default');
        }
      }
    }
  }
}

.button {
  @include button-anatomy-styles($button-filled, $sizes, $variants, $typography, $icon-size);
  @include loading-label-only($button-filled);
  @include button-colors-styles;
  @include button-outline-colors-styles;
  @include button-common-state;
}
