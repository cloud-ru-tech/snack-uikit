@import '@sbercloud/figma-tokens/build/scss/components/styles-tokens-button-buttonTonal';
@import '@sbercloud/figma-tokens/build/scss/components/styles-tokens-element';
@import '../../styles.module';

$appearances: 'primary', 'neutral', 'red';
$sizes: 's', 'm', 'l';
$variants: 'label-only', 'icon-only', 'icon-after';
$icon-sizes: (
  's': $icon-s,
  'm': $icon-s,
  'l': $icon-s,
);
$typography: (
  's': $sans-label-m,
  'm': $sans-label-l,
  'l': $sans-label-l
);

@mixin button-colors-styles {
  @each $appearance in $appearances {
    &[data-appearance='#{$appearance}'] {
      @include label-color(simple-var($theme-variables, 'sys', $appearance, 'text-support'));
      @include icon-fill(simple-var($theme-variables, 'sys', $appearance, 'text-support'));

      background-color: simple-var($theme-variables, 'sys', $appearance, 'decor-default');

      &:hover {
        @include label-color(simple-var($theme-variables, 'sys', $appearance, 'text-main'));
        @include icon-fill(simple-var($theme-variables, 'sys', $appearance, 'text-main'));

        background-color: simple-var($theme-variables, 'sys', $appearance, 'decor-hovered');
      }

      &:focus-visible {
        @include label-color(simple-var($theme-variables, 'sys', $appearance, 'text-main'));
        @include icon-fill(simple-var($theme-variables, 'sys', $appearance, 'text-main'));

        background-color: simple-var($theme-variables, 'sys', $appearance, 'decor-hovered');
      }

      &:active {
        @include label-color(simple-var($theme-variables, 'sys', $appearance, 'text-main'));
        @include icon-fill(simple-var($theme-variables, 'sys', $appearance, 'text-main'));

        background-color: simple-var($theme-variables, 'sys', $appearance, 'decor-activated');
      }

      &:disabled,
      &[data-disabled] {
        @include label-color(simple-var($theme-variables, 'sys', 'neutral', 'text-light'));
        @include icon-fill(simple-var($theme-variables, 'sys', 'neutral', 'text-light'));

        background-color: simple-var($theme-variables, 'sys', 'neutral', 'decor-disabled');
      }

      &[data-loading] {
        @include label-color(simple-var($theme-variables, 'sys', $appearance, 'text-main'));
        @include icon-fill(simple-var($theme-variables, 'sys', $appearance, 'text-main'));

        background-color: simple-var($theme-variables, 'sys', $appearance, 'decor-activated');
      }
    }
  }
}

@mixin button-outline-colors-styles {
  @each $appearance in $appearances {
    &[data-appearance='#{$appearance}'] {
      &:focus-visible {
        @if $appearance == 'neutral' {
          outline-color: var($sys-available-complementary);
        }

 @else {
          outline-color: simple-var($theme-variables, 'sys', $appearance, 'accent-default');
        }
      }
    }
  }
}

.button {
  @include button-anatomy-styles($button-tonal, $sizes, $variants, $typography, $icon-sizes);
  @include loading-label-only($button-tonal);
  @include button-colors-styles;
  @include button-outline-colors-styles;
  @include button-common-state;
}
