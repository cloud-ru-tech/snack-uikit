@use '@snack-uikit/figma-tokens/build/scss/components/styles-tokens-table';
@use '@snack-uikit/figma-tokens/build/scss/styles-theme-variables';

$appearances: 'red', 'orange', 'yellow', 'green', 'blue', 'violet', 'pink';

$snack-ui-table-row-background: var(--snack-ui-table-row-background);

@function color-with-opacity-local($color, $opacity) {
  @return styles-tokens-table.color-on-background-with-opacity($color, $snack-ui-table-row-background, $opacity);
}

.tableRow {
  --snack-ui-table-row-background: #{styles-tokens-table.$sys-neutral-background1-level};

  @include styles-tokens-table.composite-var(styles-tokens-table.$table-line-container);

  position: relative;

  display: flex;

  box-sizing: border-box;

  background-color: $snack-ui-table-row-background;
  border-color: transparent;
  border-style: solid none;
  height: styles-theme-variables.$size-table-line-height;

  &[data-auto-height] {
    height: auto;
    min-height: styles-theme-variables.$size-table-line-height;
  }
}

.rowPinnedCells {
  position: sticky;
  /* stylelint-disable-next-line declaration-property-value-allowed-list */
  z-index: 1;

  display: flex;

  box-sizing: border-box;

  background-color: $snack-ui-table-row-background;
  border-color: styles-tokens-table.$sys-neutral-decor-default;

  &::after {
    pointer-events: none;
    content: '';

    position: absolute;
    top: calc(0px - #{styles-tokens-table.$border-width-table});
    bottom: calc(0px - #{styles-tokens-table.$border-width-table});

    box-sizing: border-box;
    width: styles-tokens-table.$border-width-table;
  }

  &[data-position='left'] {
    left: 0;

    &::after {
      right: 0;

      /* stylelint-disable */
      border-right: styles-tokens-table.$border-width-table solid;
      border-color: inherit;
      /* stylelint-enable */
    }
  }

  &[data-position='right'] {
    right: 0;
    margin-left: auto;

    &::after {
      left: 0;

      /* stylelint-disable */
      border-left: styles-tokens-table.$border-width-table solid;
      border-color: inherit;
      /* stylelint-enable */
    }
  }
}

.bodyRow {
  & ~ &:before {
    content: '';

    position: absolute;
    /* stylelint-disable-next-line declaration-property-value-allowed-list */
    z-index: 2;
    top: calc(-1 * #{styles-theme-variables.$border-width-table});
    left: 0;

    width: 100%;
    height: styles-tokens-table.$border-width-table-line;

    background-color: styles-tokens-table.$sys-neutral-decor-disabled;
  }

  @each $appearance in $appearances {
    &[data-row-bg-appearance='#{$appearance}'] {
      --snack-ui-table-row-background: #{styles-tokens-table.color-on-background-with-opacity(
          styles-tokens-table.simple-var(styles-tokens-table.$theme-variables, 'sys', $appearance, 'accent-default'),
          styles-tokens-table.$sys-neutral-background1-level,
          styles-tokens-table.$opacity-a008
        )};
    }
  }

  &[data-disabled] {
    cursor: not-allowed;
    background-color: styles-tokens-table.$sys-neutral-background;

    .rowPinnedCells {
      background-color: styles-tokens-table.$sys-neutral-background;
    }
  }

  &[data-selected] {
    background-color: color-with-opacity-local(
      styles-tokens-table.$sys-primary-accent-default,
      styles-tokens-table.$opacity-a008
    );

    .rowPinnedCells {
      background-color: color-with-opacity-local(
        styles-tokens-table.$sys-primary-accent-default,
        styles-tokens-table.$opacity-a008
      );
      border-color: styles-tokens-table.$sys-primary-decor-activated;
    }

    &:hover,
    &[data-actions-opened] {
      background-color: color-with-opacity-local(
        styles-tokens-table.$sys-primary-accent-default,
        styles-tokens-table.$opacity-a016
      );
      border-color: styles-tokens-table.$sys-primary-decor-hovered;

      .rowPinnedCells {
        background-color: color-with-opacity-local(
          styles-tokens-table.$sys-primary-accent-default,
          styles-tokens-table.$opacity-a016
        );
        border-color: styles-tokens-table.$sys-primary-decor-activated;
      }
    }
  }

  &[data-clickable] {
    cursor: pointer;
  }

  &:not([data-disabled]) {
    &:hover {
      &::before {
        height: 0;
      }
    }

    &:not([data-selected]) {
      &:hover,
      &[data-actions-opened] {
        background-color: color-with-opacity-local(
          styles-tokens-table.$sys-neutral-accent-default,
          styles-tokens-table.$opacity-a008
        );
        border-color: styles-tokens-table.$sys-neutral-decor-hovered;

        .rowPinnedCells {
          background-color: color-with-opacity-local(
            styles-tokens-table.$sys-neutral-accent-default,
            styles-tokens-table.$opacity-a008
          );
          border-color: inherit;
        }
      }
    }

    &:hover + .bodyRow {
      &::before {
        height: 0;
      }
    }
  }
}

.tableHeader {
  position: sticky;
  /* stylelint-disable-next-line declaration-property-value-allowed-list */
  z-index: 3;
  top: 0;
  border: none;
}
