@use '@snack-uikit/figma-tokens/build/scss/components/styles-tokens-element' as element;
@use '@snack-uikit/figma-tokens/build/scss/components/styles-tokens-table' as table;
@use '@snack-uikit/figma-tokens/build/scss/components/styles-tokens-tree' as tree;

.treeCellContainer {
  position: relative;
  overflow: hidden;
  height: 100%;

  @include table.composite-var(table.$sans-body-m);
}

.treeCell {
  display: flex;
  align-items: center;
  justify-content: start;

  width: fit-content;
  height: 100%;
}

.cellUserToggleIcon {
  cursor: pointer;
  display: flex;
  align-items: center;
  box-sizing: border-box;
}

.treeNodeContent {
  @include tree.composite-var(tree.$tree-item-content-layout);

  cursor: pointer;

  display: flex;
  align-items: center;

  box-sizing: border-box;
  height: 100%;

  color: tree.$sys-neutral-text-support;

  &:focus-visible {
    @include element.outline-inside-var(element.$container-focused-s);

    outline-color: tree.$sys-available-complementary;
  }

  &[data-multiselect] {
    cursor: default;
  }

  &[data-disabled] {
    cursor: not-allowed;
    color: tree.$sys-neutral-text-disabled;
  }
}

.userContent {
  display: flex;
  align-items: center;
}

.line {
  margin-left: calc(#{table.$dimension-4m} + #{table.$dimension-025m});
}

.firstLine {
  margin-left: table.$dimension-2m
}

.cellExpandButton {
  box-sizing: border-box;

  svg {
    width: element.$icon-s !important; /* stylelint-disable-line declaration-no-important */
    height: element.$icon-s !important; /* stylelint-disable-line declaration-no-important */
    transition: transform 0.2s ease;
  }

  &[data-expanded] {
    svg {
      transform: rotate(90deg);
    }
  }
}

.treeCheckboxWrap {
  @include tree.composite-var(tree.$tree-item-toggle-wrap);

  display: flex;
  flex-shrink: 0;
  align-items: center;
  justify-content: center;

  box-sizing: border-box;
}
