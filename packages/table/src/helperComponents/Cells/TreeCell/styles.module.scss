@use '@snack-uikit/figma-tokens/build/scss/components/styles-tokens-element' as element;
@use '@snack-uikit/figma-tokens/build/scss/components/styles-tokens-table' as table;
@use '@snack-uikit/figma-tokens/build/scss/components/styles-tokens-tree' as tree;

.treeCell {
    display: flex;
    align-items: center;
    justify-content: start;

    width: fit-content;
    height: table.$size-markdown-table-cell-height;
}

.cellUserToggleIcon {
  cursor: pointer;
  display: flex;
  align-items: center;
  box-sizing: border-box;
  svg {
    color: tree.$sys-neutral-text-support;
  }
}

.treeNodeContent {
  @include tree.composite-var(tree.$tree-item-content-layout);

  cursor: pointer;


  display: flex;
  align-items: center;

  box-sizing: border-box;
  height: table.$size-markdown-table-cell-height;

  &:focus-visible {
    @include element.outline-inside-var(element.$container-focused-s);

    outline-color: tree.$sys-available-complementary;
  }

  &[data-multiselect] {
    cursor: default;
  }

  &[aria-disabled='true'] {
    cursor: not-allowed;

    &::before {
      display: none;
    }

    .treeNodeTitle, .treeNodeIcon {
      color: tree.$sys-neutral-text-disabled;
    }
  }

  &[aria-selected='true']:not([data-multiselect]) {
      opacity: tree.$opacity-a008;
      background-color: tree.$sys-primary-accent-default;

    &:hover {
        opacity: tree.$opacity-a016;
    }
  }
}

.userContent {
  cursor: pointer;
  display: flex;
  align-items: center;
  svg {
    color: tree.$sys-neutral-text-support;
  }
}
  .treeCellContainer {
    position: relative;
    overflow: hidden;

    @include table.composite-var(table.$sans-body-m);
  }
  .line {
    margin-left: calc(#{table.$dimension-4m} + #{table.$dimension-025m});
  }
  .firstLine {
    margin-left: table.$dimension-2m
  }
  .cellExpandButton {
    box-sizing: border-box;


    svg {
      width: element.$icon-s !important; /* stylelint-disable-line declaration-no-important */
      height: element.$icon-s !important; /* stylelint-disable-line declaration-no-important */
      transition: transform 0.2s ease;
    }

    &[data-expanded] {
      svg {
        transform: rotate(90deg);
      }
    }
  }

.treeCheckboxWrap {
  @include tree.composite-var(tree.$tree-item-toggle-wrap);

  display: flex;
  flex-shrink: 0;
  align-items: center;
  justify-content: center;

  box-sizing: border-box;
}
