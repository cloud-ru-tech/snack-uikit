@import '@sbercloud/figma-tokens/build/scss/components/styles-tokens-link';
@import '@sbercloud/figma-tokens/build/scss/components/styles-tokens-element';

$sizes: 's', 'm', 'l';
$colors: 'invert-neutral','neutral', 'primary', 'red', 'orange', 'blue', 'violet', 'pink', 'yellow', 'green';
$on-surfaces: 'background', 'decor', 'accent';

.link {
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  text-decoration: none;

  @each $on-surface in $on-surfaces {
    &[data-on-surface='#{$on-surface}'] {
      @each $color in $colors {
        &[data-color='#{$color}'] {
          @if $on-surface == 'accent' {
            color: simple-var($theme-variables, 'sys', $color, 'on-accent');

            &:hover {
              color: simple-var($theme-variables, 'sys', $color, 'on-accent');
              opacity: var($opacity-a080);
            }
            &:focus-visible {
              @include outline-var($container-focused-s);

              opacity: var($opacity-a080);
              outline-color: var($sys-available-on-complementary);
            }
          }

          @else {
            color: simple-var($theme-variables, 'sys', $color, 'accent-default');
            
            &:hover {
              color: simple-var($theme-variables, 'sys', $color, 'text-main');
            }
            &:focus-visible {
              @include outline-var($container-focused-s);

              color: simple-var($theme-variables, 'sys', $color, 'text-main');
              outline-color: var($sys-available-complementary);
            }
          }

          @each $size in $sizes {
            &[data-size='#{$size}'] {
              @if $on-surface == 'decor' {
                @include composite-var($theme-variables, 'sans', 'body', $size);
              }

              @else {
                @include composite-var($theme-variables, 'link', 'body', $size);
              }

              @include composite-var($link, 'container', $size);
            }
          }
        }
      }
    }
  }
}

