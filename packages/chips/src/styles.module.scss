@import '@sbercloud/figma-tokens/build/scss/components/styles-tokens-element';

$variants: 'label-only', 'icon-before';

@mixin chip-defaults {
  cursor: pointer;

  position: relative;

  display: inline-flex;
  align-items: center;

  box-sizing: border-box;
  width: max-content;
  min-width: max-content;
  margin: 0;
  padding: 0;

  text-decoration: none;
  text-transform: none;

  border-style: solid;
  outline: 0;
  outline-offset: 0;

  .spinner {
    display: inline-flex;
  }
}

@mixin icon-size {
  .icon {
    display: inline-flex;

    svg {
      width: var($icon-s) !important; /* stylelint-disable-line declaration-no-important */
      height: var($icon-s) !important; /* stylelint-disable-line declaration-no-important */
    }
  }
}

@mixin chip-anatomy-styles($chip-theme, $sizes, $typography, $contentClassName: null) {
  @include icon-size;

  @each $size in $sizes {
    &[data-size='#{$size}'] {
      .label {
        @include composite-var($typography, $size);
      }

      @each $variant in $variants {
        &[data-variant='#{$variant}'] {
          @if($size != 'xs' or $variant != 'icon-before') {
            @if ($contentClassName) {
              .#{$contentClassName} {
                @include composite-var($chip-theme, 'container', $size, $variant);
              }
            }

            @else {
              @include composite-var($chip-theme, 'container', $size, $variant);
            }
          }
        }
      }
    }
  }
}

@mixin chip-loading-state($chip-theme, $condition, $classNamesToHide, $contentClassName: null) {
  @if ($contentClassName) {
    .#{$contentClassName} {
      cursor: progress;
    }
  }

  @else {
    cursor: progress;
  }

  #{$condition} {
    @each $className in $classNamesToHide {
      .#{$className} {
        @include composite-var($chip-theme, 'label', 'load-label-only');
      }
    }

    .spinner {
      position: absolute;
      top: 0;
      left: 0;

      display: flex;
      align-items: center;
      justify-content: center;

      width: 100%;
      height: 100%;
    }
  }
}

@mixin chip-outline {
  @include outline-var($container-focused-s);

  outline-color: var($sys-primary-accent-default);
  outline-offset: var($spacing-state-focus-offset);
}

@mixin chip-disabled($bgColor: null, $excludeBorder: null) {
  cursor: not-allowed;
  color: simple-var($theme-variables, 'sys', 'neutral', 'text-light');
  background-color: if($bgColor, $bgColor, simple-var($theme-variables, 'sys', 'neutral', 'background'));

  @if not $excludeBorder {
    border-color: simple-var($theme-variables, 'sys', 'neutral', 'decor-disabled');
  }
}
