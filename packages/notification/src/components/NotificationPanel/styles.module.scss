@use '@snack-uikit/figma-tokens/build/scss/components/styles-tokens-notification-notificationPanel';
@use '@snack-uikit/figma-tokens/build/scss/components/styles-tokens-element';

.notificationPanelHeader {
  @include styles-tokens-notification-notificationPanel.composite-var(styles-tokens-notification-notificationPanel.$notification-panel-header-container);

  position: relative;

  display: flex;
  flex-direction: column;

  border-bottom-color: styles-tokens-notification-notificationPanel.$sys-neutral-decor-default;
  border-bottom-style: solid;

  &::before {
    pointer-events: none;
    content: '';

    position: absolute;
    top: 0;
    left: 0;

    box-sizing: border-box;
    width: 100%;
    height: calc(100% + styles-tokens-notification-notificationPanel.$border-width-notification-panel-container);

    opacity: styles-tokens-notification-notificationPanel.$opacity-a004;
    background-color: styles-tokens-notification-notificationPanel.$sys-neutral-accent-default;
    border-radius: inherit;
  }
}
.notificationPanelChips {
  @include styles-tokens-notification-notificationPanel.composite-var(styles-tokens-notification-notificationPanel.$notification-panel-header-chips);

  display: flex;
  align-items: center;
}

.notificationPanelHeaderFunctions {
  display: flex;
  align-items: center;
  justify-content: space-between;
}


.notificationPanelHeadline {
  @include styles-tokens-notification-notificationPanel.composite-var(styles-tokens-notification-notificationPanel.$notification-panel-header-headline);

  display: flex;
  align-items: center;
  color: styles-tokens-notification-notificationPanel.$sys-neutral-text-main;
}

.notificationPanelTitle {
  flex: 1 1 auto;
  min-width: 0;
}

.notificationPanelBody {
  flex: 1 1 auto;
  min-height: 0;
}

.notificationPanelCard {
  &:last-of-type {
    border-bottom: none;
  }
}

.notificationPanelFooterButton {
  @include styles-tokens-notification-notificationPanel.composite-var(styles-tokens-notification-notificationPanel.$notification-panel-button-container);

  cursor: pointer;

  flex-shrink: 0;

  box-sizing: border-box;
  width: 100%;
  margin: 0;
  padding: 0;

  color: styles-tokens-notification-notificationPanel.$sys-neutral-text-light;

  background: none;
  border-color: styles-tokens-notification-notificationPanel.$sys-neutral-decor-default;
  border-top-style: solid;
  border-right: none;
  border-bottom: none;
  border-left: none;
  outline: 0;
  outline-offset: 0;

  &:hover {
    color: styles-tokens-notification-notificationPanel.$sys-neutral-text-support;
  }

  &:focus-visible {
    @include styles-tokens-notification-notificationPanel.outline-inside-var(styles-tokens-element.$container-focused-s);

    color: styles-tokens-notification-notificationPanel.$sys-neutral-text-support;
    border-color: transparent;
    outline-color: styles-tokens-notification-notificationPanel.$sys-available-complementary;
  }

  &:active {
    color: styles-tokens-notification-notificationPanel.$sys-neutral-text-main;
    border-color: styles-tokens-notification-notificationPanel.$sys-neutral-decor-default;
  }
}

.wrapper {
  display: flex;
  flex-direction: column;

  box-sizing: border-box;
  width: 100%;
  height: 100%;
}

.scrollStub {
  height: calc(styles-tokens-notification-notificationPanel.$dimension-025m / 2);
  margin-top: calc(styles-tokens-notification-notificationPanel.$dimension-025m / -2);
  background: transparent;
}
