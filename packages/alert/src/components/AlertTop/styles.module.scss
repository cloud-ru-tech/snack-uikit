@use '@snack-uikit/figma-tokens/build/scss/components/styles-tokens-alert-alertTop';
@use '@snack-uikit/figma-tokens/build/scss/components/styles-tokens-element';

$colors: 'invert-neutral', 'primary', 'red', 'yellow', 'green', 'blue';

.alertTop {
  @include styles-tokens-alert-alertTop.composite-var(styles-tokens-alert-alertTop.$alert-top-container-container);

  display: flex;
  justify-content: space-between;
  box-sizing: border-box;

  @each $color in $colors {
    &[data-color='#{$color}'] {
      @if $color == 'invert-neutral' {
        background-color: styles-tokens-alert-alertTop.$sys-invert-neutral-background;
      }

 @else {
        background-color: styles-tokens-alert-alertTop.simple-var(styles-tokens-alert-alertTop.$theme-variables, 'sys', $color, 'accent-default');
      }
    }
  }
}

.icon {
  display: flex;
  align-items: center;
  justify-content: center;

  @each $color in $colors {
    &[data-color='#{$color}'] {
      @if $color == 'invert-neutral' {
        color: styles-tokens-alert-alertTop.$sys-invert-neutral-text-main;
      }

 @else {
        color: styles-tokens-alert-alertTop.simple-var(styles-tokens-alert-alertTop.$theme-variables, 'sys', $color, 'on-accent');
      }
    }
  }

  svg {
    width: styles-tokens-element.$icon-s !important; /* stylelint-disable-line declaration-no-important */
    height: styles-tokens-element.$icon-s !important; /* stylelint-disable-line declaration-no-important */
  }
}

.title {
  @include styles-tokens-alert-alertTop.composite-var(styles-tokens-alert-alertTop.$sans-title-s);

  @each $color in $colors {
    &[data-color='#{$color}'] {
      @if $color == 'invert-neutral' {
        color: styles-tokens-alert-alertTop.$sys-invert-neutral-text-main;
      }

 @else {
        color: styles-tokens-alert-alertTop.simple-var(styles-tokens-alert-alertTop.$theme-variables, 'sys', $color, 'on-accent');
      }
    }
  }
}

.description {
  @include styles-tokens-alert-alertTop.composite-var(styles-tokens-alert-alertTop.$sans-body-m);

  word-wrap: break-word;

  @each $color in $colors {
    &[data-color='#{$color}'] {
      @if $color == 'invert-neutral' {
        color: styles-tokens-alert-alertTop.$sys-invert-neutral-text-main;
      }

 @else {
        color: styles-tokens-alert-alertTop.simple-var(styles-tokens-alert-alertTop.$theme-variables, 'sys', $color, 'on-accent');
      }
    }
  }
}

.contentWrapper {
  display: flex;
  gap: styles-tokens-alert-alertTop.$dimension-2m;
  align-items: center;
  min-width: 0;
}

.contentLayout {
  @include styles-tokens-alert-alertTop.composite-var(styles-tokens-alert-alertTop.$alert-top-container-content-layout);

  display: flex;
  flex-direction: column;
  min-width: 0;
}

.textLayout {
  overflow: hidden;
}

.actions {
  display: flex;
  gap: styles-tokens-alert-alertTop.$dimension-2m;
  align-items: center;
}
