@use '@snack-uikit/figma-tokens/build/scss/components/styles-tokens-toggles';
@use '@snack-uikit/figma-tokens/build/scss/components/styles-tokens-element';
@use '../styles.module';

$icon-sizes: (
  's': styles-tokens-element.$icon-xs,
  'm': styles-tokens-element.$icon-s,
);

.container {
  @include styles.container('checkbox');
}

.box {
  box-sizing: border-box;
  background-color: styles-tokens-toggles.simple-var(styles-tokens-toggles.$theme-variables, 'sys', 'neutral', 'background2-level');
  border-color: styles-tokens-toggles.simple-var(styles-tokens-toggles.$theme-variables, 'sys', 'neutral', 'decor-activated');
  border-style: solid; // это наверное должно быть в композитном токене box

  &[data-checked=false] {
    &[data-focusvisible=true],
    &[data-hover=true] {
      background-color: styles-tokens-toggles.simple-var(styles-tokens-toggles.$theme-variables, 'sys', 'neutral', 'background2-level');
      border-color: styles-tokens-toggles.simple-var(styles-tokens-toggles.$theme-variables, 'sys', 'neutral', 'accent-hovered');
    }

    &[data-disabled=true] {
      background-color: styles-tokens-toggles.simple-var(styles-tokens-toggles.$theme-variables, 'sys', 'neutral', 'decor-disabled');
      border-color: styles-tokens-toggles.simple-var(styles-tokens-toggles.$theme-variables, 'sys', 'neutral', 'decor-default');
    }
  }

  &[data-indeterminate=true],
  &[data-checked=true] {
    background-color: styles-tokens-toggles.simple-var(styles-tokens-toggles.$theme-variables, 'sys', 'primary', 'accent-default');
    border-color: styles-tokens-toggles.simple-var(styles-tokens-toggles.$theme-variables, 'sys', 'primary', 'accent-default');

    &[data-focusvisible=true],
    &[data-hover=true] {
      background-color: styles-tokens-toggles.simple-var(styles-tokens-toggles.$theme-variables, 'sys', 'primary', 'accent-hovered');
      border-color: styles-tokens-toggles.simple-var(styles-tokens-toggles.$theme-variables, 'sys', 'primary', 'accent-hovered');
    }

    &[data-disabled=true] {
      background-color: styles-tokens-toggles.simple-var(styles-tokens-toggles.$theme-variables, 'sys', 'neutral', 'text-disabled');
      border-color: styles-tokens-toggles.simple-var(styles-tokens-toggles.$theme-variables, 'sys', 'neutral', 'text-disabled');
    }
  }

  @each $size in styles.$sizes {
    &[data-size='#{$size}'] {
      @include styles-tokens-toggles.composite-var(styles-tokens-toggles.$toggles, $size, 'checkbox', 'box');

      svg {
        width: styles-tokens-toggles.simple-var($icon-sizes, $size) !important; /* stylelint-disable-line declaration-no-important */
        height: styles-tokens-toggles.simple-var($icon-sizes, $size) !important; /* stylelint-disable-line declaration-no-important */
      }
    }
  }
}

.icon {
  position: absolute;
  top: 0;
  left: 0;

  display: none;

  width: 100%;
  height: 100%;

  color: styles-tokens-toggles.simple-var(styles-tokens-toggles.$theme-variables, 'sys', 'primary', 'on-accent');

  &[data-indeterminate=true],
  &[data-checked=true] {
    display: block;
  }

  &[data-disabled=true] {
    color: styles-tokens-toggles.simple-var(styles-tokens-toggles.$theme-variables, 'sys', 'neutral', 'decor-disabled');
  }
}
