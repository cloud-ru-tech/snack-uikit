@use '@snack-uikit/figma-tokens/build/scss/components/styles-tokens-counter';

$sizes: 's', 'm';
$appearances: 'primary', 'neutral', 'red';
$variants: 'count', 'count-plus', 'count-k';
$colors: 'accent', 'decor';

$value-typography: (
  s: styles-tokens-counter.$sans-label-s,
  m: styles-tokens-counter.$sans-label-l,
);
$plus-typography: (
  s: styles-tokens-counter.$sans-label-l,
  m: styles-tokens-counter.$sans-label-l,
);
$key-typography: (
  s: styles-tokens-counter.$sans-label-s,
  m: styles-tokens-counter.$sans-label-l,
);
$text-color: (
  accent: 'on-accent',
  decor: 'text-main',
);
$bg-color: (
  accent: 'accent-default',
  decor: 'decor-default',
);

.counter {
  display: inline-flex;
  flex-shrink: 0;
  align-items: center;
  justify-content: center;

  box-sizing: border-box;
  width: max-content;

  border: 0 solid transparent;

  @each $color in $colors {
    @each $appearance in $appearances {
      &[data-color='#{$color}'] {
        &[data-appearance='#{$appearance}'] {
          $text: styles-tokens-counter.simple-var($text-color, $color);
          $background: styles-tokens-counter.simple-var($bg-color, $color);

          color: styles-tokens-counter.simple-var(styles-tokens-counter.$theme-variables, 'sys', $appearance, $text);
          background-color: styles-tokens-counter.simple-var(styles-tokens-counter.$theme-variables, 'sys', $appearance, $background);
          border-color: styles-tokens-counter.$sys-neutral-background1-level;
        }
      }
    }
  }

  @each $size in $sizes {
    &[data-size='#{$size}'] {
      @include styles-tokens-counter.composite-var($value-typography, $size);
      @include styles-tokens-counter.composite-var(styles-tokens-counter.$counter, $size);

      .plus {
        @include styles-tokens-counter.composite-var($plus-typography, $size);
      }

      .key {
        @include styles-tokens-counter.composite-var($key-typography, $size);
      }
    }
  }
}
